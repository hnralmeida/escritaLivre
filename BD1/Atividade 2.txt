/* Data: 31-10 */
/* Aluno: Henrique Almeida*/ 

DROP TABLE posgraduacao;
DROP TABLE graduacao;
DROP TABLE cursa;
DROP TABLE aluno;
DROP TABLE prerequisito;
DROP TABLE disciplina;
DROP TABLE orientador;
DROP TABLE departamento;

/* 1. */

CREATE TABLE departamento(
    codigodepartamento SERIAL PRIMARY KEY,
    nome VARCHAR(40) NOT NULL
);

CREATE TABLE orientador(
    codigoorientador SERIAL PRIMARY KEY,
    nome VARCHAR(40) NOT NULL,
    codigodepartamento INTEGER REFERENCES departamento(codigodepartamento)
);

CREATE TABLE disciplina(
    codigodisciplina SERIAL PRIMARY KEY,
    nome VARCHAR(40) NOT NULL,
    ementa VARCHAR(40) NOT NULL,
    codigoorientador INTEGER REFERENCES orientador(codigoorientador),
	codigodepartamento INTEGER REFERENCES departamento(codigodepartamento)
);

CREATE TABLE prerequisito(
    codigodisciplina INTEGER REFERENCES disciplina(codigodisciplina),
    codigorequisito INTEGER REFERENCES disciplina(codigodisciplina),
    PRIMARY KEY(codigodisciplina, codigorequisito)
);

CREATE TABLE aluno(
    codigoaluno SERIAL PRIMARY KEY,
    nome VARCHAR(40) NOT NULL,
    endereco VARCHAR(40),
    telefone VARCHAR(11)
);

CREATE TABLE cursa(
    codigoaluno INTEGER REFERENCES aluno(codigoaluno),
    codigodisciplina INTEGER REFERENCES disciplina(codigodisciplina),
    PRIMARY KEY(codigoaluno, codigodisciplina),
    media REAL,
    frequencia INTEGER
);

CREATE TABLE graduacao(
    codigoaluno INTEGER REFERENCES aluno(codigoaluno),
    codigograduacao SERIAL,
    PRIMARY KEY(codigoaluno, codigograduacao),
    anoingresso INTEGER NOT NULL
);

CREATE TABLE posgraduacao(
    codigoaluno INTEGER REFERENCES aluno(codigoaluno),
    codigoposgraduacao SERIAL,
    PRIMARY KEY(codigoaluno, codigoposgraduacao),
    orientado INTEGER REFERENCES orientadOr(codigoorientador),
    formacao INTEGER NOT NULL
);  

/* 2. */

INSERT INTO departamento(nome)
VALUES ('Arquitetura'), ('Sistemas de Informação'), ('Administração');

INSERT INTO orientador (nome, codigodepartamento)
VALUES ('Renilson', 1), ('Igor', 2), ('Fernando', 3);

INSERT INTO disciplina (nome, ementa, codigodepartamento, codigoorientador)
VALUES  ('Fundamentos de Arquitetura', 'Aprender o que Arquitetura faz', 1, 1),
        ('Fundamentos de Sistemas de Informação', 'Aprender o que SI faz', 2, 2),
        ('Fundamentos de Administração', 'Aprender o que Administração faz', 3, 3),
        ('Matematica Discreta', 'Matematica para desenvolvedores', 2, 2),
        ('Teoria Geral de Sistemas', 'Sistemas segundo Bertanfly', 3, 2);

INSERT INTO prerequisito (codigodisciplina, codigorequisito)
VALUES (4, 1), (5, 1), (5, 4);

INSERT INTO aluno (nome, endereco, telefone)
VALUES  ('Ana', 'Colatina', '27998653232'),
        ('Gabriel', 'Colatina', '27993827145'),
        ('Lucas', 'Baixo Guandu', '27999784512'),
		('Vixen', 'Tailand', '27100078921');

INSERT INTO cursa (codigoaluno, codigodisciplina, media, frequencia)
VALUES  (1, 1, 7, 90),
        (2, 2, 6, 75),
        (3, 3, 6, 85),
		(2, 4, 9, 95),
		(2, 5, 5, 65),
		(4, 2, 9, 100),
		(4, 4, 10, 95),
		(4, 5, 9, 100);

INSERT INTO graduacao (codigoaluno, anoingresso)
VALUES (1, 2021), (2, 2021), (3, 2021);

INSERT INTO posgraduacao(codigoaluno, formacao)
VALUES (4, 2024);

/* 3. */
SELECT o.nome, d.nome
FROM orientador o JOIN disciplina d USING (codigoorientador)
ORDER BY o.nome;

/* 4. */
SELECT DISTINCT a.nome as Aluno, d.nome as disciplina, CASE WHEN g.codigoaluno = a.codigoaluno THEN 'Graduação' ELSE 'Pós-Graduação' END tipo 
FROM Aluno a, Disciplina d, Cursa c, Graduacao g
WHERE a.codigoaluno = c.codigoaluno 
	and a.codigoaluno = g.codigoaluno 
	and d.codigodisciplina = c.codigodisciplina
	ORDER BY a.nome;

/* 5. */
SELECT au.nome as Aluno, d.nome as Disciplina, c.media as nota
FROM aluno au, disciplina d
INNER JOIN cursa c 
ON c.codigodisciplina = d.codigodisciplina 
WHERE c.codigoaluno = au.codigoaluno AND c.media<6;

/* 6. */
SELECT d1.nome as Disciplina, d2.nome as Requisito
FROM disciplina d1
INNER JOIN prerequisito pre ON pre.codigodisciplina = d1.codigodisciplina 
INNER JOIN disciplina d2 ON d2.codigodisciplina = pre.codigorequisito;

/* 7. */
SELECT au.nome as Aluno, d.nome as disciplina, dep.nome as departamento, o.nome as professor
FROM aluno au
INNER JOIN cursa cu ON cu.codigoaluno = au.codigoaluno
INNER JOIN disciplina d ON cu.codigodisciplina = d.codigodisciplina
INNER JOIN orientador o ON o.codigoorientador = d.codigoorientador
INNER JOIN departamento dep ON dep.codigodepartamento = o.codigodepartamento;

/* 8. */
SELECT au.nome
FROM aluno au
INNER JOIN posgraduacao pos ON pos.codigoaluno = au.codigoaluno
WHERE pos.orientado IS NULL;

/* 9. */ 
SELECT DISTINCT au.nome
FROM aluno au
WHERE(
	SELECT COUNT(*)
	FROM cursa cu
	WHERE au.codigoaluno = cu.codigoaluno
)>=2;

/* 10. */
SELECT DISTINCT o.nome as Professor, dep_prof.nome as Departamento1, d.nome as Departamento2, dep_aula.nome as Disciplina
FROM orientador o 
INNER JOIN disciplina d ON o.codigoorientador = d.codigoorientador
INNER JOIN departamento dep_prof ON dep_prof.codigodepartamento = o.codigodepartamento
INNER JOIN departamento dep_aula ON dep_aula.codigodepartamento = d.codigodepartamento
WHERE o.codigodepartamento != d.codigodepartamento;
