DROP TABLE itemPedido;
DROP TABLE pedido;
DROP TABLE cliente;
DROP TABLE representante;
DROP TABLE pessoa;
DROP TABLE cidade;
DROP TABLE estado;
DROP TABLE produto;
DROP TABLE tipoProduto;

/* 1. */
CREATE TABLE estado(
    idEstado serial primary key,
    nomeEstado varchar(30)
);

CREATE TABLE cidade(
    idCidade serial primary key,
    nomeCidade varchar(30),
    idEstado integer references estado(idEstado)
);

CREATE TABLE pessoa(
    idPessoa serial primary key,
    nomePessoa varchar(30),
    telefone varchar(20),
    idCidade integer references cidade(idCidade)
);

CREATE TABLE representante(
    idPessoa integer references pessoa(idPessoa),
    PRIMARY KEY(idPessoa),
    comissao float
);

CREATE TABLE cliente(
    idPessoa integer references pessoa(idPessoa),
    PRIMARY KEY(idPessoa),
    cnpj varchar(15),
    dtAniversario timestamp
);

CREATE TABLE pedido(
    idPedido serial PRIMARY KEY,
    idRepresentante integer references representante(idPessoa),
    idCliente integer references cliente(idPessoa),
    dataEmissao timestamp,
    dataEntrega timestamp,
    entregue bool DEFAULT FALSE
);

CREATE TABLE tipoProduto(
    idTipoProduto serial primary key,
    tipo varchar(20)
);

CREATE TABLE produto(
    idProduto serial primary key,
    nomeProduto varchar(30),
    preco float,
    idTipoProduto integer references TipoProduto(idTipoProduto)
);

CREATE TABLE itemPedido(
    idPedido integer references pedido(idPedido),
    idProduto integer references produto(idProduto),
    PRIMARY KEY(idPedido, idProduto),
    quantidade integer
);

/* 2. */
INSERT INTO estado(nomeEstado) 
VALUES  ('Espirito Santo'), 
        ('Minas Gerais'), 
        ('Rio de Janeiro'), 
        ('Sao Paulo'), 
        ('Bahia');

INSERT INTO cidade(nomeCidade, idEstado)
VALUES  ('Colatina', 1), 
        ('Marilandia', 1), 
        ('Baixo Guandu', 1), 
        ('Aimores', 2), 
        ('Rio de Janeiro', 3);
		
INSERT INTO cidade(nomeCidade)
VALUES  ('Astapor'), 
        ('Meereen');
        
INSERT INTO pessoa(nomePessoa, telefone, idCidade)
VALUES  ('Luiz Eduardo', '27996896969', 3),
        ('Amanda', '27998646565', 1),
        ('Henrique', '27988424236', 2),
        ('Gustavo', '33997646421', 4),
        ('Fernando', '21988645464', 5),
        ('Plus Vitta', '2733896969', 3),
        ('Carrissimo', '2732646565', 1),
        ('Antoline', '2733424236', 2),
        ('Capel ltda.', '3332646421', 4),
        ('Inhanguera', '2126645464', 5);
        
INSERT INTO representante(idPessoa, comissao)
VALUES  (1, 2.2),
        (2, 3.5),
        (3, 10),
        (4, 3.5),
        (5, 3.0);
        
INSERT INTO cliente(idPessoa, cnpj, dtAniversario)
VALUES  (6, '11222333780110', '12-01-1997'),
        (7, '08222345500127', '06-08-1964'),
        (8, '69022367070101', '22-11-2020'),
        (9, '50222378121178', '30-05-2009'),
        (10, '54222389350145', '19-02-1999');
        
INSERT INTO pedido(idRepresentante, idCliente, dataEmissao, dataEntrega)
VALUES  (1, 6, '17-10-2022', '1-12-2022'),
        (2, 7, '8-11-2020', '15-12-2020'),
        (3, 8, '16-11-2021', '22-12-2021'),
        (4, 9, '12-08-2019', '30-11-2019'),
		(5, 9, '12-10-2022', '13-12-2022'),
        (5, 9, '23-10-2021', '31-12-2021'),
        (5, 9, '21-10-2022', '02-12-2022'),
        (5, 10, '5-05-2022', '9-6-2022'),
        (4, 10, '5-06-2022', '9-7-2022'),
        (3, 10, '5-07-2022', '9-8-2022'),
        (4, 10, '5-08-2022', '9-9-2022'),
        (2, 10, '5-10-2021', '9-11-2021'),
        (1, 10, '5-11-2022', '9-12-2022');
        
INSERT INTO tipoProduto(tipo)
VALUES  ('Alimentação'),
        ('Eletronicos'),
        ('Higiene'),
        ('Telefonia'),
        ('Vestuário');
        
INSERT INTO produto(nomeProduto, preco, idTipoProduto)
VALUES  ('Pipoca', 1.22, 1),
        ('Headset', 78.57, 2),
        ('Escova', 4.29, 3),
        ('Redphone', 1345.60, 4),
        ('Bermuda', 51.89, 5);
        
INSERT INTO itemPedido(idPedido, idProduto, quantidade)
VALUES  (1, 1, 20),
        (1, 2, 8),
        (2, 4, 5),
        (3, 5, 5),
        (4, 3, 20),
        (4, 5, 30),
		(5, 2, 3),
        (6, 2, 10),
        (6, 3, 10);

/* 3. 
Crie a sequência de comandos necessários para excluir um cliente.
*/
DELETE FROM itemPedido
WHERE idPedido in (
    SELECT p1.idPedido 
    FROM pedido p1, pessoa p2
    WHERE p1.idCliente = p2.idPessoa and p2.nomePessoa = 'Plus Vitta'
);

SELECT ip.idPedido, ip.idProduto, c.idpessoa
FROM itemPedido ip, cliente c, pedido p
WHERE ip.idPedido=p.idPedido and p.idcliente = c.idpessoa;

DELETE FROM pedido
WHERE idCliente in (
    SELECT p.idPessoa
    FROM pessoa p
    WHERE p.nomePessoa = 'Plus Vitta'
);

DELETE FROM cliente
WHERE idPessoa in (
    SELECT p.idPessoa
    FROM pessoa p
    WHERE p.nomePessoa = 'Plus Vitta'
);

DELETE FROM pessoa
WHERE nomePessoa = 'Plus Vitta';

/* 4. 
Crie um comando que retorne o nome do cliente, o numero do pedido, a data da compra, e
o valor total do pedido do ano de 2022.
*/
SELECT p1.nomePessoa as "Nome do Cliente", 
	p2.idPedido as "Número do Pedido", 
	to_char(date(p2.dataEmissao), 'DD-MM-YYYY') as "Data de Compra", 
	ROUND(SUM(p3.preco*ip.quantidade)::numeric, 2) as "Total"
FROM pessoa p1, cliente c, pedido p2, produto p3, itemPedido ip
WHERE ip.idProduto=p3.idProduto 
	and ip.idPedido=p2.idPedido 
	and p2.idCliente=c.idPessoa 
	and c.idPessoa=p1.idPessoa 
	and EXTRACT(year from p2.dataEmissao) = '2022'
GROUP BY p1.nomePessoa, p2.idPedido;

/* 5. 
Utilize as tabelas de cidade e estado e demonstre a aplicação de cada comando (Inner
Join, Left Join, Right Join, Outer Join, Left Excluding Join, Right Excluding Join, Outer
Excluding Join).
*/
SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
INNER JOIN estado e ON e.idEstado=c.idEstado; /** Inner Join */

SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
RIGHT JOIN estado e ON e.idEstado=c.idEstado; /** Right Join */

SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
LEFT JOIN estado e ON e.idEstado=c.idEstado; /** Left Join */

SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
LEFT JOIN estado e ON e.idEstado=c.idEstado
WHERE e.idEstado is NULL; /** Left Excluding Join */

SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
RIGHT JOIN estado e ON e.idEstado=c.idEstado
WHERE c.idEstado is NULL; /** Right Excluding Join */

SELECT c.nomeCidade as "Cidade", e.nomeEstado as "Estado"
FROM cidade c
FULL JOIN estado e ON e.idEstado=c.idEstado
WHERE c.idEstado is NULL or e.idEstado is NULL; /** Outer Excluding Join */

/* 6. 
Crie um comando que liste somente as cidades que tiveram venda no mês de novembro,
ordene pelo nome da cidade (use o distinct).
*/
SELECT DISTINCT c1.nomeCidade
FROM cidade c1, pessoa p1, cliente c2, pedido p2
WHERE c1.idCidade=p1.idCidade 
	and p1.idPessoa=c2.idPessoa 
	and c2.idPessoa = p2.idCliente
	and EXTRACT(MONTH FROM p2.dataEmissao) = 11
ORDER BY c1.nomeCidade;

/* 7.
Crie um comando que liste os pedido, nome do cliente, a data de entrega, o nome do
representante dos pedidos que não foram entregues e estão atrasados em relação a data
atual. (use a função de datas “age”)
*/
SELECT p2.idPedido as "Pedido", 
	p1.nomePessoa as "Cliente", 
	to_char(date(p2.dataEntrega), 'DD-MM-YYYY') as "Data de Entrega", 
	p3.nomePessoa as "Representante"
FROM pessoa p1, cliente c, representante r, pedido p2, pessoa p3
WHERE p2.idCliente=c.idPessoa
	and c.idPessoa = p1.idPessoa
	and p2.idRepresentante = r.idPessoa
	and r.idPessoa = p3.idPessoa
	and AGE(p2.dataEntrega, p2.dataEmissao)>AGE(CURRENT_DATE, p2.dataEmissao);
	
/* 8.
Crie um comando para retornar os aniversariantes que fazem aniversário na data atua
(hoje, use a função “part” para separar o dia das datas). O mesmo comando deve
funcionar para todos os dias do ano.
*/
SELECT p.idPessoa, p.nomePessoa
FROM pessoa p, cliente c
WHERE c.idPessoa=p.idPessoa 
	and EXTRACT(DAY FROM current_date) = EXTRACT(DAY FROM date(c.dtaniversario))
	and EXTRACT(MONTH FROM current_date) = EXTRACT(MONTH FROM date(c.dtaniversario));
	
/*9.
Monte um comando que retorne somente o nome do cliente e a data da última compra, a
data da primeira compra, dos clientes que compraram no mês de outubro e não
compraram no mês de novembro, ordene pela data da última compra.
*/
SELECT da.nomePessoa as "Nome do Cliente", 
	to_char(date(da.dataEmissao), 'DD-MM-YYYY') as "Ultima Compra" 
FROM (
	SELECT	p1.idPessoa,
			p1.nomePessoa, 
			p2.dataEmissao, 
			RANK() OVER (PARTITION  BY p1.nomePessoa ORDER BY p2.dataEmissao) as pos
	FROM pessoa p1, cliente c, pedido p2
	WHERE p1.idPessoa=c.idPessoa
		and c.idPessoa=p2.idCliente
        and EXTRACT(YEAR FROM p2.dataEmissao)=EXTRACT(YEAR FROM CURRENT_DATE)
) as da
WHERE da.pos<2
    and EXTRACT(MONTH FROM da.dataEmissao)=10
ORDER BY da.dataEmissao;

/* 10.
Crie um comando que retorne o nome do representante e o valor total vendido por ele no
mês de novembro e uma a consulta, em uma só, com uma consulta que retorne o nome do
cliente e o valor total vendido, crie um campo que diferencie qual é cliente e qual é
representante e ordene pelo nome.
*/
SELECT da.nomePessoa as "Nome", 
    da.total as "Total",
	'Cliente' as "Tipo"
FROM (
    SELECT	p1.idPessoa,
			p1.nomePessoa, 
			p2.dataEmissao, 
			ROUND(SUM(p3.preco*ip.quantidade)::numeric, 2) as "total"
	FROM pessoa p1, cliente c, pedido p2, itemPedido ip, Produto p3
	WHERE ip.idProduto=p3.idProduto 
	    and ip.idPedido=p2.idPedido 
	    and p2.idCliente=c.idPessoa 
	    and c.idPessoa=p1.idPessoa 
    GROUP BY p1.idPessoa, p2.dataEmissao
) as da
UNION (
    SELECT	p1.nomePessoa as "Nome", 
			ROUND(SUM(p3.preco*ip.quantidade)::numeric, 2) as "Total",
			'Representante' as "Tipo"
	FROM pessoa p1, cliente c, pedido p2, itemPedido ip, Produto p3
	WHERE ip.idProduto=p3.idProduto 
	    and ip.idPedido=p2.idPedido 
	    and p2.idCliente=c.idPessoa 
	    and c.idPessoa=p1.idPessoa 
    GROUP BY p1.idPessoa, p2.dataEmissao
)
ORDER BY 1;

/* 11.
Cire um comando que retorne o nome do cliente, o nome da cidade e o nome 
do estado dos cliente que compraram em 2022, ordenando por estado, cidade 
e pelo nome.
*/
SELECT DISTINCT da.nomePessoa as "Nome do Cliente", 
	da.nomeCidade as "Nome da Cidade",
	da.nomeEstado as "Nome do Estado"
FROM pedido p, (
	SELECT p.nomePessoa,
		c2.nomeCidade,
		e.nomeEstado,
		c1.idPessoa
	FROM cliente c1, pessoa p, cidade c2, estado e
	WHERE c1.idPessoa=p.idPessoa
		and p.idCidade=c2.idCidade
		and c2.idEstado=e.idEstado
) as da
WHERE DATE_PART('year', p.dataEmissao)=2022
    and da.idPessoa = p.idCliente
ORDER BY "Nome do Estado", "Nome da Cidade", "Nome do Cliente";

/* 12.
Crie um comando que retorne o tipo de produto, o valor total e a quantidade vendida para
cada tipo de produto ordenado pelo valor total
*/
SELECT da.tipo as "Tipo de Produto", 
    da.total as "Valor Total", 
    da.qt as "Quantidade Vendida"
FROM (
    SELECT ROUND(SUM(p2.preco*ip.quantidade)::numeric, 2) as "total",
        SUM(ip.quantidade) as "qt",
        tp.tipo
    FROM pedido p1, itemPedido ip, produto p2, tipoProduto tp
    WHERE p1.idPedido=ip.idPedido
        and ip.idProduto=p2.idProduto
        and p2.idTipoProduto = tp.idTipoProduto
    GROUP BY tp.tipo
) as da
ORDER BY da.tipo;

/* 13.
Monte um comando que retorne o nome do produto e o seu tipo nos produtos que não tiveram 
venda no mês de outubro.
*/
SELECT da.nomeProduto as "Nome do Produto",
    da.tipo as "Tipo de Produto"
FROM (
    SELECT p2.nomeProduto, tp.tipo
    FROM pedido p1, itemPedido ip, produto p2, tipoProduto tp
    WHERE p1.idPedido=ip.idPedido
        and ip.idProduto=p2.idProduto
        and p2.idTipoProduto=tp.idTipoProduto
        and EXTRACT(month from p1.dataEmissao)!=10
        and EXTRACT(year from p1.dataEmissao)!=2022
    GROUP BY p2.nomeProduto, tp.tipo
) as da
ORDER BY da.nomeProduto;

/* 14.
Crie um comando que liste o nome do cliente e o número de dias existentes entre as datas 
da primeira compra e a data atual. Ordene a consulta de forma que os clientes mais 
antigos apareçam primeiro.
*/
SELECT da.nomePessoa as "Nome do Cliente",
    da.dias as "Última Compra"
FROM (
    SELECT p1.nomePessoa, EXTRACT(day from current_date - min(p2.dataemissao)) as "dias"
    FROM pessoa p1, cliente c1, pedido p2, itemPedido ip, produto p3
    WHERE c1.idpessoa = p1.idpessoa
        and c1.idpessoa = p2.idcliente
    GROUP BY p1.nomePessoa
) as da
ORDER BY da.dias desc;

/* 15.
    Crie um comando que retorne a quantidade média, o valor total comprado por cliente 
    no ano de 2022
*/

